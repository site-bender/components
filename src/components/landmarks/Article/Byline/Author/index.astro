---
import type { AuthorProps } from "./types"

import compact from "../../../../../utilities/compact"
import generateShortId from "../../../../../utilities/generateShortId"
import mapAttributes from "../../../../../utilities/mapAttributes"

const {
	as: Element = "span",
	id = generateShortId(),
	person,
	useMicrodata,
	...attrs
} = Astro.props as AuthorProps

const attributes = mapAttributes(attrs, ["author"])

const {
	name: {
		family: familyName,
		given: giveName,
		middle: additionalName,
		prefix: honorificPrefix,
		suffix: honorificSuffix,
	} = {},
	url: href,
} = person

const label = compact([
	honorificPrefix,
	giveName,
	additionalName,
	familyName,
	honorificSuffix,
]).join(" ")

const [itemscope, itemtype, itemprop, nameProp] = useMicrodata
	? [true, "https://schema.org/Person", "author", "name"]
	: []

const linkItemprop = useMicrodata ? { itemprop: "url" } : {}
---

<Element
	{itemprop}
	{itemscope}
	{itemtype}
	{id}
	{...attributes}
	>{
		href ? (
			<a
				{href}
				{...linkItemprop}
			>
				<span itemprop={nameProp}>{label}</span>
			</a>
		) : (
			<span itemprop={nameProp}>{label}</span>
		)
	}</Element
>
